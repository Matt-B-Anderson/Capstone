{"version":3,"sources":["components/Navbar.jsx","components/AuthForm.jsx","context/UserProvider.jsx","components/Auth.jsx","components/Character.jsx","components/BattleText.jsx","components/Battle.jsx","components/StoreText.jsx","components/Store.jsx","components/ProtectedRoute.jsx","App.js","index.js"],"names":["Navbar","props","logout","getMonster","className","to","onClick","AuthForm","handleChange","handleSubmit","btnText","errMsg","inputs","username","password","onSubmit","type","value","name","onChange","placeholder","style","color","UserContext","React","createContext","userAxios","axios","create","UserProvider","initState","user","JSON","parse","localStorage","getItem","token","character","monster","useState","userState","setUserState","handleAuthErr","prevState","Provider","signup","credentials","post","then","res","data","setItem","stringify","prevUserState","catch","err","response","login","get","console","log","removeItem","resetAuthErr","createCharacter","newCharacter","children","interceptors","request","use","config","headers","Authorization","initInputs","Auth","setInputs","toggle","setToggle","useContext","e","target","prevInputs","toggleForm","prev","preventDefault","Character","health","strength","gold","healthPotion","backgroundImage","BattleText","charHealth","monstHealth","monsterName","damage","Battle","fightDamage","setFightDamage","history","useHistory","fight","fighter","max","Math","floor","random","image","monsterHealth","characterHealth","startFight","push","StoreText","Store","src","alt","ProtectedRoute","path","redirectTo","C","component","rest","render","App","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.89dd383e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    const { logout, getMonster } = props\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link to=\"/character\">Character</Link>\r\n            <Link onClick={getMonster} to=\"/battle\">Battle</Link>\r\n            <Link to=\"/store\">Store</Link>\r\n            <button onClick={logout}>Logout</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function AuthForm(props) {\r\n    const {\r\n        handleChange,\r\n        handleSubmit,\r\n        btnText,\r\n        errMsg,\r\n        inputs: {\r\n            username,\r\n            password,\r\n        }\r\n    } = props\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={username}\r\n                name=\"username\"\r\n                onChange={handleChange}\r\n                placeholder=\"Username\" />\r\n            <input\r\n                type=\"text\"\r\n                value={password}\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n                placeholder=\"Password\" />\r\n            <button>{btnText}</button>\r\n            <p style={{ color: 'red' }}>{errMsg}</p>\r\n        </form>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const UserContext = React.createContext()\r\n\r\nconst userAxios = axios.create()\r\n\r\nuserAxios.interceptors.request.use(config => {\r\n    const token = localStorage.getItem('token')\r\n    config.headers.Authorization = `Bearer ${token}`\r\n    return config\r\n})\r\n\r\nexport default function UserProvider(props) {\r\n    const initState = {\r\n        user: JSON.parse(localStorage.getItem('user')) || {},\r\n        token: localStorage.getItem('token') || '',\r\n        character: {},\r\n        monster: {},\r\n        errMsg: ''\r\n\r\n    }\r\n\r\n    const [userState, setUserState] = useState(initState)\r\n\r\n    //Auth Requests\r\n    function signup(credentials) {\r\n        axios.post('/auth/signup', credentials)\r\n            .then(res => {\r\n                const { user, token } = res.data\r\n                localStorage.setItem('token', token)\r\n                localStorage.setItem('user', JSON.stringify(user))\r\n                setUserState(prevUserState => ({\r\n                    ...prevUserState,\r\n                    user,\r\n                    token\r\n                }))\r\n            })\r\n            .catch(err => handleAuthErr(err.response.data.errMsg))\r\n    }\r\n\r\n    function login(credentials) {\r\n        axios.post('/auth/login', credentials)\r\n            .then(res => {\r\n                const { user, token } = res.data\r\n                localStorage.setItem('token', token)\r\n                localStorage.setItem('user', JSON.stringify(user))\r\n                setUserState(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        user,\r\n                        token\r\n                    }\r\n                })\r\n            })\r\n            .then(() => getUserCharacter())\r\n            .catch(err => handleAuthErr(err.response.data.errMsg))\r\n    }\r\n\r\n    function logout() {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('user')\r\n        setUserState(() => ({\r\n            ...initState,\r\n            user: {},\r\n            token: ''\r\n        }))\r\n    }\r\n\r\n    function handleAuthErr(errMsg) {\r\n        setUserState(prevState => ({\r\n            ...prevState,\r\n            errMsg\r\n        }))\r\n    }\r\n\r\n    function resetAuthErr() {\r\n        setUserState(prevState => ({\r\n            ...prevState,\r\n            errMsg: ''\r\n        }))\r\n    }\r\n\r\n    //Character Requests\r\n    function getUserCharacter() {\r\n        return userAxios.get('/characterApi/character/user')\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setUserState(prevState => ({\r\n                    ...prevState,\r\n                    character: res.data\r\n                }))\r\n            })\r\n            .catch(err => console.log(err.response.data.errMsg))\r\n    }\r\n\r\n    function createCharacter(newCharacter) {\r\n        userAxios.post('/characterApi/character', newCharacter)\r\n            .then(res => {\r\n                setUserState(prevState => ({\r\n                    ...prevState,\r\n                    character: res.data\r\n                }))\r\n            })\r\n            .catch(err => err.response.data.errMsg)\r\n    }\r\n\r\n    //Monster Requests\r\n    function getMonster() {\r\n        axios.get(`/monsterApi/monster`)\r\n            .then(res => {\r\n                setUserState(prevState => ({\r\n                    ...prevState,\r\n                    monster: res.data\r\n                }))\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                ...userState,\r\n                setUserState,\r\n                signup,\r\n                login,\r\n                logout,\r\n                resetAuthErr,\r\n                createCharacter,\r\n                getMonster\r\n            }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport AuthForm from './AuthForm.jsx'\r\nimport { UserContext } from '../context/UserProvider'\r\n\r\nconst initInputs = { username: \"\", password: \"\" }\r\n\r\nexport default function Auth() {\r\n    const [inputs, setInputs] = useState(initInputs)\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const { signup, login, errMsg, resetAuthErr } = useContext(UserContext)\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target\r\n        setInputs(prevInputs => ({\r\n            ...prevInputs,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    function handleSignup(e) {\r\n        e.preventDefault()\r\n        signup(inputs)\r\n    }\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault()\r\n        login(inputs)\r\n    }\r\n\r\n    function toggleForm() {\r\n        setToggle(prev => !prev)\r\n        resetAuthErr()\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-container\">\r\n            <h1>DIMENSIONAL PIT</h1>\r\n            { !toggle ?\r\n                <>\r\n                    <AuthForm\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleSignup}\r\n                        inputs={inputs}\r\n                        btnText=\"Sign up\"\r\n                        errMsg={errMsg}\r\n                    />\r\n                    <p onClick={toggleForm}>Already a member?</p>\r\n                </>\r\n                :\r\n                <>\r\n                    <AuthForm\r\n                        handleChange={handleChange}\r\n                        handleSubmit={handleLogin}\r\n                        inputs={inputs}\r\n                        btnText=\"Login\"\r\n                        errMsg={errMsg}\r\n                    />\r\n                    <p onClick={toggleForm}>Not a member?</p>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { UserContext } from '../context/UserProvider'\r\n\r\nexport default function Character() {\r\n    const {\r\n        character,\r\n        createCharacter\r\n    } = useContext(UserContext)\r\n\r\n\r\n    const initInputs = {\r\n        name: ''\r\n    }\r\n\r\n    const [inputs, setInputs] = useState(initInputs)\r\n\r\n    function handleNameChange(e) {\r\n        const { name, value } = e.target\r\n        setInputs(prevInputs => ({\r\n            ...prevInputs,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    function handleCharacterCreation(e) {\r\n        e.preventDefault()\r\n        createCharacter(inputs)\r\n        setInputs(initInputs)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className='character-name'>Welcome {character.name}</h1>\r\n            <div className='character'>\r\n                {character.name ?\r\n                    <>\r\n\r\n                        <div className='character-'>\r\n                            <h2>Your Stats:</h2>\r\n                            <ul>\r\n                                <li>Health: {character.health}</li>\r\n                                <li>Strength: {character.strength}</li>\r\n                            </ul>\r\n                            <h2>Your Items:</h2>\r\n                            <ul>\r\n                                <li>Gold: {character.gold}</li>\r\n                                <li>Health Potions: {character.healthPotion}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div\r\n                            className='character-picture'\r\n                            style={{ backgroundImage: 'url(https://i.pinimg.com/originals/11/28/d2/1128d22436b6e56397ae3f7fa05449c1.jpg)' }}\r\n                        >\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <form className='character-form' onSubmit={handleCharacterCreation}>\r\n                            <input\r\n                                type='text'\r\n                                name=\"name\"\r\n                                value={character.name}\r\n                                onChange={handleNameChange}\r\n                                placeholder='Enter Desired Character Name'\r\n                            />\r\n                            <button>Create Character</button>\r\n                        </form>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function BattleText(props) {\r\n\r\n    const { charHealth, monstHealth, monsterName, damage } = props\r\n\r\n    return (\r\n                <p className='battle-text'> Your current health is {charHealth} and {monsterName}'s health is {monstHealth}. Continue your fight by clicking Fight! if you dare. </p>\r\n                \r\n                // < p className='battle-text' > You attack {monsterName} and deal {damage} to them, and theircurrent health is {monstHealth}.{monsterName} attacks you back and deals {damage} to you and your current health is {charHealth}. </p>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../context/UserProvider'\r\nimport BattleText from './BattleText'\r\n\r\nexport default function Battle() {\r\n\r\n    const {\r\n        character,\r\n        monster,\r\n        setUserState,\r\n        getMonster\r\n    } = useContext(UserContext)\r\n\r\n    const [fightDamage, setFightDamage] = useState()\r\n\r\n    const history = useHistory();\r\n\r\n    console.log(character)\r\n    console.log(monster)\r\n\r\n    function routeChange() {\r\n        let path = `character`\r\n        history.push(path)\r\n    }\r\n\r\n    function getRandomNum(max) {\r\n        return Math.floor(Math.random() * Math.floor(max * 2))\r\n    }\r\n\r\n    function startFight(character, monster) {\r\n        const monsterHealth = fight(character, monster)\r\n        const characterHealth = fight(monster, character)\r\n\r\n        setUserState(prevState => ({\r\n            ...prevState,\r\n            character: { ...prevState.character, health: characterHealth },\r\n            monster: { ...prevState.monster, health: monsterHealth }\r\n        }))\r\n    }\r\n\r\n    function fight(fighter, target) {\r\n        const damage = getRandomNum(fighter.strength);\r\n        setFightDamage(damage)\r\n        target.health = target.health - damage;\r\n        return target.health;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className='monster-name'>{monster.name}</h1>\r\n            <div className='battle'>\r\n                <div\r\n                    className='battle-picture'\r\n                    style={{ backgroundImage: `url(${monster.image})` }}\r\n                >\r\n                </div>\r\n                <BattleText\r\n                    charHealth={character.health}\r\n                    monstHealth={monster.health}\r\n                    monsterName={monster.name}\r\n                    damage={fightDamage}\r\n                />\r\n                <span>\r\n                    {!character.health <= 0 && !monster.health <= 0 ?\r\n                        <button onClick={() => startFight(character, monster)}>Fight!</button>\r\n                        :\r\n                        <button onClick={() => getMonster()}>New Monster</button>\r\n                    }\r\n                    <button onClick={routeChange}>Run!</button>\r\n                </span>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n/*\r\ncondition 1 && condition 2 = both have to be Tfor it be true overall\r\ncharacter = 5, monster = -1\r\ncharacter < 1 || monster < 1\r\nF                T => T\r\n\r\n*/","import React from 'react'\r\n\r\nexport default function StoreText(props) {\r\n\r\n    const { health } = props\r\n\r\n    return (\r\n        <p className='store-text'>Your current health is {health}</p>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { UserContext } from '../context/UserProvider'\r\nimport StoreText from './StoreText'\r\n\r\n\r\nexport default function Store() {\r\n\r\n    const {\r\n        character,\r\n        setUserState\r\n    } = useContext(UserContext)\r\n\r\n    function buyPotion() {\r\n        setUserState(prevState => ({\r\n            ...prevState,\r\n            character: { ...prevState.character, health: 100 }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className='store-title'>The Store</h1>\r\n            <div className='store'>\r\n                <div\r\n                    className='store-picture'\r\n                    style={{ backgroundImage: 'url(https://i.pinimg.com/originals/af/eb/0a/afeb0a18536d438b5f97d13f291b5c33.jpg)' }}\r\n                >\r\n                </div>\r\n                <div className='potions'>\r\n                    <img\r\n                        className='potion-picture'\r\n                        src='https://i.pinimg.com/originals/ed/fb/02/edfb023fc8730e52974b69f6607cc8a4.jpg'\r\n                        alt=''\r\n                    >\r\n                    </img>\r\n                    <button onClick={() => buyPotion()} >Buy Potion</button>\r\n                </div>\r\n                <StoreText\r\n                    health={character.health}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport default function ProtectedRoute(props) {\r\n    const { path, redirectTo, component: C, token, ...rest } = props\r\n    return token ?\r\n        <Route path={path} render={() => <C {...rest} />} /> :\r\n        <Redirect to={redirectTo} />\r\n}","import React, { useContext } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Auth from './components/Auth'\nimport Character from './components/Character'\nimport Battle from './components/Battle'\nimport Store from './components/Store'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport { UserContext } from './context/UserProvider'\n\nexport default function App() {\n  const { token, logout, getMonster } = useContext(UserContext)\n  return (\n    <div className='App'>\n      {token && <Navbar logout={logout} getMonster={getMonster} />}\n      <Switch>\n        <Route\n          exact path='/'\n          render={() => token ? <Redirect to='/character' /> : <Auth />}\n        />\n\n        <ProtectedRoute\n          path=\"/character\"\n          component={Character}\n          redirectTo='/'\n          token={token}\n        />\n        <ProtectedRoute\n          path=\"/battle\"\n          component={Battle}\n          redirectTo='/'\n          token={token}\n        />\n        <ProtectedRoute\n          path=\"/store\"\n          component={Store}\n          redirectTo='/'\n          token={token}\n        />\n      </Switch>\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './css/index.css';\nimport App from './App';\nimport UserProvider from './context/UserProvider'\n\nReactDOM.render(\n  <BrowserRouter>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}